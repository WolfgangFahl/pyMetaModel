@startuml
package SmartRQM {
  class RQProfile {
    RQProfileNumber:Text
    projectNo:Text
    longname:Text
    comment:Text
    startdate:Date
    RQProfilename:Text
    customer:Text
  }
Note top of RQProfile
 An RQProfile is a set of Requirements
(RQ) that is the goal for a specific
solution to be realized.
End note
  class RQ {
    description:Text
    what:Text
    basedOn:Text
    owner:Text
    kind:Text
    name:Text
    enteredOn:Date
    negative:Boolean
    weight:Text
    RQnumber:Text
    RQid:Text
    enteredBy:Text
    RQProfilename:Text
    priority:Text
    comment:Text
    state:Text
    qualityAcceptance:Text
    why:Text
    design:Boolean
  }
Note top of RQ
a Requirement describes the expected
behaviour of a system
End note
  class AC {
    qualityAcceptance:Text
    RQname:Text
    state:Text
    situation:Text
    responsible:Text
    rejection:Boolean
    disabled:Boolean
    action:Text
    done:Boolean
    ACnumber:Text
    ACid:Text
    expected_result:Text
    doneDate:Date
    comment:Text
    difficulty:Text
    project:Text
    enteredBy:Text
    RQProfilename:Text
    name:Text
    enteredOn:Date
    acceptance:Text
    description:Text
    accDate:Date
    RQnumber:Text
    manualOnly:Boolean
    owner:Text
  }
Note top of AC
an acceptance criterion
End note
  class OQ {
    description:Text
    answeredAt:Date
    state:Text
    question:Text
    OQnumber:Text
    name:Text
    assumedAnswer:Text
    OQid:Text
    placedAt:Date
    answer:Text
  }
Note top of OQ
 an open question
End note
}
RQProfile "myRQProfile 1" -- "myRQs *" RQ
RQ "myRQ 1" -- "myACs *" AC
RQ "myRQ 1" -- "myOQs *" OQ

' BITPlan Corporate identity skin params
' Copyright (c) 2015-2024 BITPlan GmbH
' see http://wiki.bitplan.com/PlantUmlSkinParams#BITPlanCI
' skinparams generated by com.bitplan.restmodelmanager
skinparam note {
  BackGroundColor #FFFFFF
  FontSize 12
  ArrowColor #FF8000
  BorderColor #FF8000
  FontColor black
  FontName Technical
}
skinparam component {
  BackGroundColor #FFFFFF
  FontSize 12
  ArrowColor #FF8000
  BorderColor #FF8000
  FontColor black
  FontName Technical
}
skinparam package {
  BackGroundColor #FFFFFF
  FontSize 12
  ArrowColor #FF8000
  BorderColor #FF8000
  FontColor black
  FontName Technical
}
skinparam usecase {
  BackGroundColor #FFFFFF
  FontSize 12
  ArrowColor #FF8000
  BorderColor #FF8000
  FontColor black
  FontName Technical
}
skinparam activity {
  BackGroundColor #FFFFFF
  FontSize 12
  ArrowColor #FF8000
  BorderColor #FF8000
  FontColor black
  FontName Technical
}
skinparam classAttribute {
  BackGroundColor #FFFFFF
  FontSize 12
  ArrowColor #FF8000
  BorderColor #FF8000
  FontColor black
  FontName Technical
}
skinparam interface {
  BackGroundColor #FFFFFF
  FontSize 12
  ArrowColor #FF8000
  BorderColor #FF8000
  FontColor black
  FontName Technical
}
skinparam class {
  BackGroundColor #FFFFFF
  FontSize 12
  ArrowColor #FF8000
  BorderColor #FF8000
  FontColor black
  FontName Technical
}
skinparam object {
  BackGroundColor #FFFFFF
  FontSize 12
  ArrowColor #FF8000
  BorderColor #FF8000
  FontColor black
  FontName Technical
}
hide Circle
' end of skinparams '

@enduml
