name: MetaModel
id: MetaModel
prefixes:
  linkml:
    prefix_prefix: linkml
    prefix_reference: https://w3id.org/linkml/
  MetaModel:
    prefix_prefix: MetaModel
    prefix_reference: MetaModel/
  xsd:
    prefix_prefix: xsd
    prefix_reference: http://www.w3.org/2001/XMLSchema#
  shex:
    prefix_prefix: shex
    prefix_reference: http://www.w3.org/ns/shex#
default_prefix: MetaModel
default_range: string
types:
  string:
    name: string
    description: A character string
    from_schema: https://w3id.org/linkml/types
    base: str
    uri: xsd:string
  integer:
    name: integer
    description: An integer
    from_schema: https://w3id.org/linkml/types
    base: int
    uri: xsd:integer
  boolean:
    name: boolean
    description: A binary (true or false) value
    from_schema: https://w3id.org/linkml/types
    base: Bool
    uri: xsd:boolean
    repr: bool
  float:
    name: float
    description: A real number that conforms to the xsd:float specification
    from_schema: https://w3id.org/linkml/types
    base: float
    uri: xsd:float
  double:
    name: double
    description: A real number that conforms to the xsd:double specification
    from_schema: https://w3id.org/linkml/types
    base: float
    uri: xsd:double
  decimal:
    name: decimal
    description: A real number with arbitrary precision that conforms to the xsd:decimal
      specification
    from_schema: https://w3id.org/linkml/types
    base: Decimal
    uri: xsd:decimal
  time:
    name: time
    description: A time object represents a (local) time of day, independent of any
      particular day
    notes:
    - URI is dateTime because OWL reasoners don't work with straight date or time
    from_schema: https://w3id.org/linkml/types
    base: XSDTime
    uri: xsd:dateTime
    repr: str
  date:
    name: date
    description: a date (year, month and day) in an idealized calendar
    notes:
    - URI is dateTime because OWL reasoners don't work with straight date or time
    from_schema: https://w3id.org/linkml/types
    base: XSDDate
    uri: xsd:date
    repr: str
  datetime:
    name: datetime
    description: The combination of a date and time
    from_schema: https://w3id.org/linkml/types
    base: XSDDateTime
    uri: xsd:dateTime
    repr: str
  date_or_datetime:
    name: date_or_datetime
    description: Either a date or a datetime
    from_schema: https://w3id.org/linkml/types
    base: str
    uri: linkml:DateOrDatetime
    repr: str
  uriorcurie:
    name: uriorcurie
    description: a URI or a CURIE
    from_schema: https://w3id.org/linkml/types
    base: URIorCURIE
    uri: xsd:anyURI
    repr: str
  uri:
    name: uri
    description: a complete URI
    from_schema: https://w3id.org/linkml/types
    base: URI
    uri: xsd:anyURI
    repr: str
  ncname:
    name: ncname
    description: Prefix part of CURIE
    from_schema: https://w3id.org/linkml/types
    base: NCName
    uri: xsd:string
    repr: str
  objectidentifier:
    name: objectidentifier
    description: A URI or CURIE that represents an object in the model.
    comments:
    - Used for inheritence and type checking
    from_schema: https://w3id.org/linkml/types
    base: ElementIdentifier
    uri: shex:iri
    repr: str
  nodeidentifier:
    name: nodeidentifier
    description: A URI, CURIE or BNODE that represents a node in a model.
    from_schema: https://w3id.org/linkml/types
    base: NodeIdentifier
    uri: shex:nonLiteral
    repr: str
slots:
  name:
    name: name
    description: Name of the context,The name of the property,The name of the topic,The
      name of the Action,The name of the topic link
    from_schema: MetaModel
    range: string
  since:
    name: since
    description: since when is this context available?,since when is this action available?
    from_schema: MetaModel
    range: date
  updated:
    name: updated
    description: most recent update of the context
    from_schema: MetaModel
    range: date
  copyright:
    name: copyright
    description: copyright of the context
    from_schema: MetaModel
    range: string
  master:
    name: master
    description: what is the original master source of this context
    from_schema: MetaModel
    range: uri
  label:
    name: label
    description: The label to be shown when in a form
    from_schema: MetaModel
    range: string
  type:
    name: type
    description: The type of a Property,The Semantic MediaWiki type  without the prefix
      e.g. Text, Number, Boolean
    from_schema: MetaModel
    range: string
  index:
    name: index
    description: A positive number that specifies at which position of a Topic the
      given property should show. The first property to show has the index 1 each
      following property has an index that is +1 of the previous.
    from_schema: MetaModel
    range: double
  sortPos:
    name: sortPos
    description: "If none empty >0 this is the position in the sort clause of this\
      \ \nproperty. This is used when displaying list of the topic as the default\
      \ sort order\nand it is used for selecting topics .\n\nE.g.\nSortpos 1 for attribute\
      \ lastname and sortpos 2 for attribute firstname leads to  sort by lastname,firstname"
    from_schema: MetaModel
    range: double
  primaryKey:
    name: primaryKey
    description: is this property a primary key of it's topic?
    from_schema: MetaModel
    range: boolean
  mandatory:
    name: mandatory
    description: 'Specifies that this field must be filled in by the user. Note: mandatory
      should not be used in conjunction with hidden. Use of both in any field will
      cause the mandatory check on any field to fail when the form is saved.


      see http://www.mediawiki.org/wiki/Extension:Semantic_Forms/Defining_forms#.27field.27_tag'
    from_schema: MetaModel
    range: boolean
  namespace:
    name: namespace
    description: namespace prefix
    from_schema: MetaModel
    range: string
  size:
    name: size
    description: the display size of the field for the property
    from_schema: MetaModel
    range: double
  uploadable:
    name: uploadable
    description: 'Specifies that a link should be placed next to this field, that
      opens a popup window to let the user upload a file; see ''Uploading files'',
      below. See

      * https://www.mediawiki.org/wiki/Extension:Semantic_Forms/Defining_forms#.27field.27_tag

      * https://www.mediawiki.org/wiki/Extension:Semantic_Forms/Defining_forms#Uploading_files


      The type of the target property needs to be Page for this to work'
    from_schema: MetaModel
    range: boolean
  defaultValue:
    name: defaultValue
    description: 'default value - Specifies a default value for this field. For date-related
      fields, default=now will set the value to the current date and possibly time.
      For text fields, default=current user will set the value to the username of
      the user adding this page. For the checkbox input type, default=yes will check
      the checkbox by default. (The ''checkboxes'' input type, on the other hand,
      like the ''listbox'' type, requires specifying the actual values, like default=Value
      A, Value C.) You can also include templates, parser functions, and magic words
      within the ''default='' value.


      see http://www.mediawiki.org/wiki/Extension:Semantic_Forms/Defining_forms#.27field.27_tag
      (default)'
    from_schema: MetaModel
    range: string
  inputType:
    name: inputType
    description: 'see

      * http://www.mediawiki.org/wiki/Extension:Semantic_Forms/Defining_forms#.27field.27_tag<br>input
      type - Specifies the type of input this field will have in the form. If a field
      corresponds to an SMW property or Cargo field, the form will usually have the
      correct input type by default; otherwise the default is text. If the corresponding
      SMW property, or Cargo field, cannot be automatically determined, you can use
      the parameter ''property'', or the parameters ''cargo table'' and ''cargo field'',
      to manually specify it (see below). The allowed set of input types is different
      for every semantic property type; see below for the full list of options.

      * http://www.mediawiki.org/wiki/Extension:Semantic_Forms/Defining_forms#Allowed_input_types_for_data_types

      * http://www.mediawiki.org/wiki/Extension:Semantic_Forms_Inputs'
    from_schema: MetaModel
    range: string
  allowedValues:
    name: allowedValues
    description: 'There are two ways to specified allowed Values:

      # https://semantic-mediawiki.org/wiki/Help:Special_property_Allows_value. <br>Use
      [[Property:Allows_value]] to see which values are allowed for certain properties

      # http://www.mediawiki.org/wiki/Extension:Semantic_Forms/Defining_forms#.27field.27_tag<br>values=possible
      values - Specifies a set of either possible values or autocompletion values
      (depending on the input type) that this field can have, overriding whatever
      set of values may have been set from the Semantic MediaWiki property. This set
      of values is separated by commas by default, but the delimiter can be modified
      using the delimiter= parameter.


      If you specify any values method number 2 will be used here which might override
      any allowed Values specified with method number 1.'
    from_schema: MetaModel
    range: string
  documentation:
    name: documentation
    description: The documentation for a property,The documentation of this Semantic
      Media Wiki type,The plaintext documentation of a Topic. Please do not use markup
      for this.
    from_schema: MetaModel
    range: string
  values_from:
    name: values_from
    description: 'Specifies where to get the possible values to be displayed in a
      form from see

      http://www.mediawiki.org/wiki/Extension:Semantic_Forms/Defining_forms#.27field.27_tag


      * values from property=property name - Similar to values=, but gets its values
      from the the set of all values that a certain SMW property points to.

      * values from category=category name - Similar to values=, but gets its values
      from the names of all pages belonging to a specific category.

      * values from concept=concept name - Similar to values=, but gets its values
      from the names of all pages belonging to a specific concept.

      * values from namespace=namespace name - Similar to values=, but gets its values
      from the names of all pages belonging to a specific namespace. (To get values
      from the main namespace, use ''Main'' for the namespace name, or just leave
      it blank.)

      * values from url=URL identifier - Used only for autocompletion. Specifies that
      autocompletion should be based on the values retrieved from an outside URL;
      see Autocompleting on outside values for how to do this.

      * values from external data=variable name - Used for autocompletion. You need
      to have theExternal Data extension installed to be able to use this parameter.
      It specifies that autocompletion should be based on the data retrieved from
      an outside source. A large number of data sources are supported, including web
      APIs, regular wiki pages, files on the local server, databases and LDAP directories.
      See Autocompletion using External Data.'
    from_schema: MetaModel
    range: string
  externalFormatterURI:
    name: externalFormatterURI
    description: see https://www.semantic-mediawiki.org/wiki/Help:Special_property_External_formatter_URI<br>When
      using this property the type of the property should be set to https://www.semantic-mediawiki.org/wiki/Help:Type_External_identifier
      automatically by the generator
    from_schema: MetaModel
    range: string
  showInGrid:
    name: showInGrid
    description: "I am true if this property is displayed in the default list of properties\
      \ for my topic as \na column"
    from_schema: MetaModel
    range: boolean
  isLink:
    name: isLink
    description: true if this Property is derived form a Link. It will not be exported
      to SiDIF separately and automatically be added by the Property Generator
    from_schema: MetaModel
    range: boolean
  nullable:
    name: nullable
    description: should nullvalues be allowed and value set to NULL when empty?
    from_schema: MetaModel
    range: boolean
  topic:
    name: topic
    description: topic
    from_schema: MetaModel
    range: Topic
  id:
    name: id
    description: SMW internal id of the type
    from_schema: MetaModel
    range: string
  helppage:
    name: helppage
    description: The url of the 'official' documentation page of this type
    from_schema: MetaModel
    range: uri
  typepage:
    name: typepage
    description: The Semantic Media Wiki Special page for this specific type e.g.
      Special:Types/Text, Special:Types/Boolean, Special:Types/Date, Special:Types/Number,
      Special:Types/Page
    from_schema: MetaModel
    range: string
  javaType:
    name: javaType
    description: Java mapping of this type
    from_schema: MetaModel
    range: string
  usedByProperties:
    name: usedByProperties
    description: the properties having this type
    from_schema: MetaModel
    range: Property
  pluralName:
    name: pluralName
    description: The plural of a topic name. E.g. for the topic 'City' the pluralName
      is 'Cities'. If no pluralName is specified an 's' is appended. E.g. for the
      topic 'Book' the default pluralName is 'Books'
    from_schema: MetaModel
    range: string
  icon:
    name: icon
    description: an Icon for the topic
    from_schema: MetaModel
    range: string
  iconUrl:
    name: iconUrl
    description: the url of an icon
    from_schema: MetaModel
    range: string
  wikiDocumentation:
    name: wikiDocumentation
    description: Documentation of the Topic using MediaWiki / Semantic Mediawiki markup
    from_schema: MetaModel
    range: string
  defaultstoremode:
    name: defaultstoremode
    description: The default storemode of the topic
    from_schema: MetaModel
    range: string
  listLimit:
    name: listLimit
    description: 'What is the default #ask list limit for this Topic?'
    from_schema: MetaModel
    range: double
  cargo:
    name: cargo
    description: Should the Topic be stored using the [https://www.mediawiki.org/wiki/Extension:Cargo
      Cargo Extension?]
    from_schema: MetaModel
    range: boolean
  headerTabs:
    name: headerTabs
    description: shall the forms be generated with header tabs?
    from_schema: MetaModel
    range: boolean
  context:
    name: context
    description: context
    from_schema: MetaModel
    range: Context
  servicetype:
    name: servicetype
    description: The type of the service
    from_schema: MetaModel
    range: string
  service:
    name: service
    description: The service to be used
    from_schema: MetaModel
    range: uri
  inputtype:
    name: inputtype
    description: What is the type of the input?
    from_schema: MetaModel
    range: string
  input:
    name: input
    description: the decription of the input e.g. a page name, url or SMW ask query
    from_schema: MetaModel
    range: string
  actionpage:
    name: actionpage
    description: What page will 'steer' this action?
    from_schema: MetaModel
    range: string
  output:
    name: output
    description: where the output of the action should go
    from_schema: MetaModel
    range: string
  engine:
    name: engine
    description: the template engine to be used either [[Rythm]] or [[Freemarker]]
    from_schema: MetaModel
    range: string
  author:
    name: author
    description: the author of this action
    from_schema: MetaModel
    range: string
  comment:
    name: comment
    description: a comment for the action
    from_schema: MetaModel
    range: string
  source:
    name: source
    description: the source of a topic Link
    from_schema: MetaModel
    range: string
  sourceRole:
    name: sourceRole
    from_schema: MetaModel
    range: string
  sourceMultiple:
    name: sourceMultiple
    from_schema: MetaModel
    range: boolean
  sourceDocumentation:
    name: sourceDocumentation
    description: Documentation for the source Role
    from_schema: MetaModel
    range: string
  target:
    name: target
    from_schema: MetaModel
    range: string
  targetRole:
    name: targetRole
    from_schema: MetaModel
    range: string
  targetMultiple:
    name: targetMultiple
    from_schema: MetaModel
    range: boolean
  targetDocumentation:
    name: targetDocumentation
    description: Documentation for the target Role
    from_schema: MetaModel
    range: string
  masterDetail:
    name: masterDetail
    description: "should the details be displayed in the same form and template?\n\
      If no \n* for a 1:1 link there will be a linking attribute used and that can\
      \ be selected. \n* for a 1:n link a link to the list of neighbours will be displayed\n\
      if yes\n* for a 1:1 link the details\n* for a 1:n link"
    from_schema: MetaModel
    range: boolean
classes:
  Context:
    name: Context
    description: A Context groups some topics like a Namespace/Package
    from_schema: MetaModel
    attributes:
      name:
        name: name
        description: Name of the context,The name of the property,The name of the
          topic,The name of the Action,The name of the topic link
        from_schema: MetaModel
        range: string
      since:
        name: since
        description: since when is this context available?,since when is this action
          available?
        from_schema: MetaModel
        range: date
      updated:
        name: updated
        description: most recent update of the context
        from_schema: MetaModel
        range: date
      copyright:
        name: copyright
        description: copyright of the context
        from_schema: MetaModel
        range: string
      master:
        name: master
        description: what is the original master source of this context
        from_schema: MetaModel
        range: uri
  Property:
    name: Property
    description: a Property is a Feature/Attribute of a Topic
    from_schema: MetaModel
    attributes:
      name:
        name: name
        description: Name of the context,The name of the property,The name of the
          topic,The name of the Action,The name of the topic link
        from_schema: MetaModel
        range: string
      label:
        name: label
        description: The label to be shown when in a form
        from_schema: MetaModel
        range: string
      type:
        name: type
        description: The type of a Property,The Semantic MediaWiki type  without the
          prefix e.g. Text, Number, Boolean
        from_schema: MetaModel
        range: string
      index:
        name: index
        description: A positive number that specifies at which position of a Topic
          the given property should show. The first property to show has the index
          1 each following property has an index that is +1 of the previous.
        from_schema: MetaModel
        range: double
      sortPos:
        name: sortPos
        description: "If none empty >0 this is the position in the sort clause of\
          \ this \nproperty. This is used when displaying list of the topic as the\
          \ default sort order\nand it is used for selecting topics .\n\nE.g.\nSortpos\
          \ 1 for attribute lastname and sortpos 2 for attribute firstname leads to\
          \  sort by lastname,firstname"
        from_schema: MetaModel
        range: double
      primaryKey:
        name: primaryKey
        description: is this property a primary key of it's topic?
        from_schema: MetaModel
        range: boolean
      mandatory:
        name: mandatory
        description: 'Specifies that this field must be filled in by the user. Note:
          mandatory should not be used in conjunction with hidden. Use of both in
          any field will cause the mandatory check on any field to fail when the form
          is saved.


          see http://www.mediawiki.org/wiki/Extension:Semantic_Forms/Defining_forms#.27field.27_tag'
        from_schema: MetaModel
        range: boolean
      namespace:
        name: namespace
        description: namespace prefix
        from_schema: MetaModel
        range: string
      size:
        name: size
        description: the display size of the field for the property
        from_schema: MetaModel
        range: double
      uploadable:
        name: uploadable
        description: 'Specifies that a link should be placed next to this field, that
          opens a popup window to let the user upload a file; see ''Uploading files'',
          below. See

          * https://www.mediawiki.org/wiki/Extension:Semantic_Forms/Defining_forms#.27field.27_tag

          * https://www.mediawiki.org/wiki/Extension:Semantic_Forms/Defining_forms#Uploading_files


          The type of the target property needs to be Page for this to work'
        from_schema: MetaModel
        range: boolean
      defaultValue:
        name: defaultValue
        description: 'default value - Specifies a default value for this field. For
          date-related fields, default=now will set the value to the current date
          and possibly time. For text fields, default=current user will set the value
          to the username of the user adding this page. For the checkbox input type,
          default=yes will check the checkbox by default. (The ''checkboxes'' input
          type, on the other hand, like the ''listbox'' type, requires specifying
          the actual values, like default=Value A, Value C.) You can also include
          templates, parser functions, and magic words within the ''default='' value.


          see http://www.mediawiki.org/wiki/Extension:Semantic_Forms/Defining_forms#.27field.27_tag
          (default)'
        from_schema: MetaModel
        range: string
      inputType:
        name: inputType
        description: 'see

          * http://www.mediawiki.org/wiki/Extension:Semantic_Forms/Defining_forms#.27field.27_tag<br>input
          type - Specifies the type of input this field will have in the form. If
          a field corresponds to an SMW property or Cargo field, the form will usually
          have the correct input type by default; otherwise the default is text. If
          the corresponding SMW property, or Cargo field, cannot be automatically
          determined, you can use the parameter ''property'', or the parameters ''cargo
          table'' and ''cargo field'', to manually specify it (see below). The allowed
          set of input types is different for every semantic property type; see below
          for the full list of options.

          * http://www.mediawiki.org/wiki/Extension:Semantic_Forms/Defining_forms#Allowed_input_types_for_data_types

          * http://www.mediawiki.org/wiki/Extension:Semantic_Forms_Inputs'
        from_schema: MetaModel
        range: string
      allowedValues:
        name: allowedValues
        description: 'There are two ways to specified allowed Values:

          # https://semantic-mediawiki.org/wiki/Help:Special_property_Allows_value.
          <br>Use [[Property:Allows_value]] to see which values are allowed for certain
          properties

          # http://www.mediawiki.org/wiki/Extension:Semantic_Forms/Defining_forms#.27field.27_tag<br>values=possible
          values - Specifies a set of either possible values or autocompletion values
          (depending on the input type) that this field can have, overriding whatever
          set of values may have been set from the Semantic MediaWiki property. This
          set of values is separated by commas by default, but the delimiter can be
          modified using the delimiter= parameter.


          If you specify any values method number 2 will be used here which might
          override any allowed Values specified with method number 1.'
        from_schema: MetaModel
        range: string
      documentation:
        name: documentation
        description: The documentation for a property,The documentation of this Semantic
          Media Wiki type,The plaintext documentation of a Topic. Please do not use
          markup for this.
        from_schema: MetaModel
        range: string
      values_from:
        name: values_from
        description: 'Specifies where to get the possible values to be displayed in
          a form from see

          http://www.mediawiki.org/wiki/Extension:Semantic_Forms/Defining_forms#.27field.27_tag


          * values from property=property name - Similar to values=, but gets its
          values from the the set of all values that a certain SMW property points
          to.

          * values from category=category name - Similar to values=, but gets its
          values from the names of all pages belonging to a specific category.

          * values from concept=concept name - Similar to values=, but gets its values
          from the names of all pages belonging to a specific concept.

          * values from namespace=namespace name - Similar to values=, but gets its
          values from the names of all pages belonging to a specific namespace. (To
          get values from the main namespace, use ''Main'' for the namespace name,
          or just leave it blank.)

          * values from url=URL identifier - Used only for autocompletion. Specifies
          that autocompletion should be based on the values retrieved from an outside
          URL; see Autocompleting on outside values for how to do this.

          * values from external data=variable name - Used for autocompletion. You
          need to have theExternal Data extension installed to be able to use this
          parameter. It specifies that autocompletion should be based on the data
          retrieved from an outside source. A large number of data sources are supported,
          including web APIs, regular wiki pages, files on the local server, databases
          and LDAP directories. See Autocompletion using External Data.'
        from_schema: MetaModel
        range: string
      externalFormatterURI:
        name: externalFormatterURI
        description: see https://www.semantic-mediawiki.org/wiki/Help:Special_property_External_formatter_URI<br>When
          using this property the type of the property should be set to https://www.semantic-mediawiki.org/wiki/Help:Type_External_identifier
          automatically by the generator
        from_schema: MetaModel
        range: string
      showInGrid:
        name: showInGrid
        description: "I am true if this property is displayed in the default list\
          \ of properties for my topic as \na column"
        from_schema: MetaModel
        range: boolean
      isLink:
        name: isLink
        description: true if this Property is derived form a Link. It will not be
          exported to SiDIF separately and automatically be added by the Property
          Generator
        from_schema: MetaModel
        range: boolean
      nullable:
        name: nullable
        description: should nullvalues be allowed and value set to NULL when empty?
        from_schema: MetaModel
        range: boolean
      topic:
        name: topic
        description: topic
        from_schema: MetaModel
        range: Topic
  SMW_Type:
    name: SMW_Type
    description: an SMW_Type is a data type which determines the possible values for
      that type e.g. a Boolean can hold true/false values while a Number can hold
      3.1459 or 20. A Page can hold the name of a Wiki page see https://semantic-mediawiki.org/wiki/Help:List_of_datatypes
    from_schema: MetaModel
    attributes:
      type:
        name: type
        description: The type of a Property,The Semantic MediaWiki type  without the
          prefix e.g. Text, Number, Boolean
        from_schema: MetaModel
        range: string
      documentation:
        name: documentation
        description: The documentation for a property,The documentation of this Semantic
          Media Wiki type,The plaintext documentation of a Topic. Please do not use
          markup for this.
        from_schema: MetaModel
        range: string
      id:
        name: id
        description: SMW internal id of the type
        from_schema: MetaModel
        range: string
      helppage:
        name: helppage
        description: The url of the 'official' documentation page of this type
        from_schema: MetaModel
        range: uri
      typepage:
        name: typepage
        description: The Semantic Media Wiki Special page for this specific type e.g.
          Special:Types/Text, Special:Types/Boolean, Special:Types/Date, Special:Types/Number,
          Special:Types/Page
        from_schema: MetaModel
        range: string
      javaType:
        name: javaType
        description: Java mapping of this type
        from_schema: MetaModel
        range: string
      usedByProperties:
        name: usedByProperties
        description: the properties having this type
        from_schema: MetaModel
        range: Property
  Topic:
    name: Topic
    description: A Topic is a Concept/Class/Thing/Entity
    from_schema: MetaModel
    attributes:
      name:
        name: name
        description: Name of the context,The name of the property,The name of the
          topic,The name of the Action,The name of the topic link
        from_schema: MetaModel
        range: string
      pluralName:
        name: pluralName
        description: The plural of a topic name. E.g. for the topic 'City' the pluralName
          is 'Cities'. If no pluralName is specified an 's' is appended. E.g. for
          the topic 'Book' the default pluralName is 'Books'
        from_schema: MetaModel
        range: string
      icon:
        name: icon
        description: an Icon for the topic
        from_schema: MetaModel
        range: string
      iconUrl:
        name: iconUrl
        description: the url of an icon
        from_schema: MetaModel
        range: string
      documentation:
        name: documentation
        description: The documentation for a property,The documentation of this Semantic
          Media Wiki type,The plaintext documentation of a Topic. Please do not use
          markup for this.
        from_schema: MetaModel
        range: string
      wikiDocumentation:
        name: wikiDocumentation
        description: Documentation of the Topic using MediaWiki / Semantic Mediawiki
          markup
        from_schema: MetaModel
        range: string
      defaultstoremode:
        name: defaultstoremode
        description: The default storemode of the topic
        from_schema: MetaModel
        range: string
      listLimit:
        name: listLimit
        description: 'What is the default #ask list limit for this Topic?'
        from_schema: MetaModel
        range: double
      cargo:
        name: cargo
        description: Should the Topic be stored using the [https://www.mediawiki.org/wiki/Extension:Cargo
          Cargo Extension?]
        from_schema: MetaModel
        range: boolean
      headerTabs:
        name: headerTabs
        description: shall the forms be generated with header tabs?
        from_schema: MetaModel
        range: boolean
      context:
        name: context
        description: context
        from_schema: MetaModel
        range: Context
  Action:
    name: Action
    description: An action/function/operation to be performed
    from_schema: MetaModel
    attributes:
      name:
        name: name
        description: Name of the context,The name of the property,The name of the
          topic,The name of the Action,The name of the topic link
        from_schema: MetaModel
        range: string
      servicetype:
        name: servicetype
        description: The type of the service
        from_schema: MetaModel
        range: string
      service:
        name: service
        description: The service to be used
        from_schema: MetaModel
        range: uri
      inputtype:
        name: inputtype
        description: What is the type of the input?
        from_schema: MetaModel
        range: string
      input:
        name: input
        description: the decription of the input e.g. a page name, url or SMW ask
          query
        from_schema: MetaModel
        range: string
      actionpage:
        name: actionpage
        description: What page will 'steer' this action?
        from_schema: MetaModel
        range: string
      output:
        name: output
        description: where the output of the action should go
        from_schema: MetaModel
        range: string
      engine:
        name: engine
        description: the template engine to be used either [[Rythm]] or [[Freemarker]]
        from_schema: MetaModel
        range: string
      author:
        name: author
        description: the author of this action
        from_schema: MetaModel
        range: string
      since:
        name: since
        description: since when is this context available?,since when is this action
          available?
        from_schema: MetaModel
        range: date
      comment:
        name: comment
        description: a comment for the action
        from_schema: MetaModel
        range: string
  TopicLink:
    name: TopicLink
    description: A TopicLink links two Concepts
    from_schema: MetaModel
    attributes:
      name:
        name: name
        description: Name of the context,The name of the property,The name of the
          topic,The name of the Action,The name of the topic link
        from_schema: MetaModel
        range: string
      source:
        name: source
        description: the source of a topic Link
        from_schema: MetaModel
        range: string
      sourceRole:
        name: sourceRole
        from_schema: MetaModel
        range: string
      sourceMultiple:
        name: sourceMultiple
        from_schema: MetaModel
        range: boolean
      sourceDocumentation:
        name: sourceDocumentation
        description: Documentation for the source Role
        from_schema: MetaModel
        range: string
      target:
        name: target
        from_schema: MetaModel
        range: string
      targetRole:
        name: targetRole
        from_schema: MetaModel
        range: string
      targetMultiple:
        name: targetMultiple
        from_schema: MetaModel
        range: boolean
      targetDocumentation:
        name: targetDocumentation
        description: Documentation for the target Role
        from_schema: MetaModel
        range: string
      masterDetail:
        name: masterDetail
        description: "should the details be displayed in the same form and template?\n\
          If no \n* for a 1:1 link there will be a linking attribute used and that\
          \ can be selected. \n* for a 1:n link a link to the list of neighbours will\
          \ be displayed\nif yes\n* for a 1:1 link the details\n* for a 1:n link"
        from_schema: MetaModel
        range: boolean

